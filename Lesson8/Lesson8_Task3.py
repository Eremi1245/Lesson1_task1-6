# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


# я точно не знаю, но помоему для реализации задания, список должен формироваться изначально, а не вбиваться
# пользователем, так как при вводе через инпут, тип элемента всегда будет "str"
class MyError(ValueError):
    txt = 'Тип вводимого атрибута должен быть "int"'


print('Для выхода введте "stop"')
users_list = []
while True:
    user_input1 = input('Введите число для внесения в список ')
    if user_input1 == 'stop' or user_input1 == 'стоп':
        print(users_list)
        break
    else:
        try:
            users_list.append(int(user_input1))
        except ValueError:
            print(MyError.txt)
